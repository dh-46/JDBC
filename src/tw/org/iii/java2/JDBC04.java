package tw.org.iii.java2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

/*	20180826PM1 getConnection V3 連線方式
 * 	getConnection(String url, Properties info)
 * 		=> properties 
 * 			https://dev.mysql.com/doc/connector-j/5.1/en/connector-j-reference-configuration-properties.html
 * 		=> 彈性更大, 自訂屬性設定
 * 	Properties
 * 		Map架構
 * 		
 * 	有些伺服器會保持持續性的連接, 所以要抓到伺服器的特性.
 * 
 */

public class JDBC04 {

	public static void main(String[] args) {
		String url = "jdbc:mysql://localhost:3306/iii"; 
		
		//	透過properties資料結構來存放屬性資料 => 彈性比一二種更大
		Properties prop = new Properties();
		prop.setProperty("user", "root");
		prop.setProperty("password", "root");
		
		
		// SQL Command
		String insert = "insert into cust (name, tel, birthday)" + 
						"values ('Ben', '232323', '2018-01-01')";
		
		try {
			// 建立連線 (透過字串) 第二招  getConnection(String url, String user, String password)
			Connection conn = DriverManager.getConnection(url, prop);
			Statement stmt = conn.createStatement();
			
			//	stmt.executeQuery(insert);	// 這個是查詢語法 不可用insert
			stmt.execute(insert);	// 這個才是執行
			
			
			conn.close();
			System.out.println("OK");
		} catch (SQLException e) {
			System.out.println(e);
		}
	}

}
